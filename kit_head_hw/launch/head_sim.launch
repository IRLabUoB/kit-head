<launch>
	<!-- LAUNCH INTERFACE -->
	
	<!-- in case you have different robot configurations -->
	<arg name="robot_name" default="head"/>

	<arg name="t1_limits" default="false"/>
	<arg name="controllers" default="joint_trajectory_controller"/>
	<arg name="stopped_controllers" default="gravity_compensation_controller one_task_inverse_kinematics"/>


	<!-- set some ros tools -->
	<arg name="use_rviz" default="true"/>
	<arg name="gui" default="true" />
	<arg name="use_head_sim" default="true" />
	
	<!-- Load joint controller configurations from YAML file to parameter server -->
  	<rosparam file="$(find kit_head_hw)/config/controllers.yaml" command="load"/>
  	<rosparam command="load" file="$(find kit_head_hw)/config/hw_interface.yaml"/>
  	

	<!-- LAUNCH IMPLEMENTATION -->

	<!-- the urdf/sdf parameter -->
	<param name="robot_description" command="$(find xacro)/xacro --inorder $(find kit_head_description)/robot/kit_head.urdf.xacro"/>
	
	<!-- joint and robot state publishers of the full robot description -->
	<node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher">
		<rosparam param="source_list">[/head/joint_states]</rosparam>
		<remap from="/joint_states" to="/head/joint_states" />
	</node>
	<node ns="head" name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher"/>
	
	<group if="$(arg use_rviz)">
		<node name="head_rviz" pkg="rviz" type="rviz" respawn="false" args="-d $(find kit_head_description)/launch/rviz_config.rviz" output="screen"/>
	</group>

	<!-- robot simulation uses the full robot description -->
	<group if="$(arg use_head_sim)">
		<!-- spawn the robot in gazebo -->
		<node name="spawn_urdf" pkg="gazebo_ros" type="spawn_model" args="-param robot_description -urdf -model $(arg robot_name)"  respawn="false" output="screen" />

		<!-- enable/disable gui at will, the rviz listens to the simulation -->
		<include file="$(find gazebo_ros)/launch/empty_world.launch">
			<arg name="world_name" value="$(find kit_head_description)/worlds/simple_environment.world"/>
			<arg name="paused" value="false"/>
			<arg name="use_sim_time" value="true"/>
			<arg name="gui" value="true"/>
			<arg name="headless" value="false"/>
			<arg name="debug" value="false"/>

		</include>
	</group>


  	<group ns="head">
		<node name="controller_spawner" pkg="controller_manager" type="spawner" respawn="false" output="screen"  args="joint_state_controller joint_trajectory_controller"/>
	</group>

	
	

	<!-- load robotHW configurations to rosparam server -->
	<!-- <rosparam command="load" file="$(find single_lwr_robot)/config/hw_interface.yaml"/> -->

	<!-- load all controller configurations to rosparam server -->
	<!-- <rosparam file="$(find single_lwr_robot)/config/controllers.yaml" command="load"/> -->



</launch>
