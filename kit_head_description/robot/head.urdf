<?xml version="1.0" ?>
<!-- =================================================================================== -->
<!-- |    This document was autogenerated by xacro from kit_head_in_world.urdf.xacro   | -->
<!-- |    EDITING THIS FILE BY HAND IS NOT RECOMMENDED                                 | -->
<!-- =================================================================================== -->
<robot name="Eddie" xmlns:xacro="http://www.ros.org/wiki/xacro">
  <material name="KIT/White">
    <color rgba="1 1 1 1.0"/>
  </material>
  <material name="KIT/DarkGrey">
    <color rgba="0.3 0.3 0.3 1.0"/>
  </material>
  <material name="KIT/LightGrey">
    <color rgba="0.8 0.8 0.8 1.0"/>
  </material>
  <material name="KIT/Red">
    <color rgba="0.3 0.3 0.3 1.0"/>
  </material>
  <material name="KIT/Black">
    <color rgba="0 0 0 1.0"/>
  </material>
  <material name="KIT/Orange">
    <color rgba="1.0 0.487 0 1.0"/>
  </material>
  <material name="KIT/Silver">
    <color rgba="1.0 1.0 1.0 1.0"/>
  </material>
  <material name="KIT/Grey">
    <color rgba="0.7 0.7 0.7 1.0"/>
  </material>
  <material name="KIT/Blue">
    <color rgba="0.0 0.0 0.8 1.0"/>
  </material>
  <material name="KIT/HandGray">
    <color rgba="0.953 0.996 0.694 1.0"/>
  </material>
  <material name="KIT/SickBlue">
    <color rgba="0.3058 0.5921 0.7294 1.0"/>
  </material>
  <!-- NOTE: inertia values are approximated using meshlab and only using the significant elements -->
  <!-- from http://answers.ros.org/question/11350/is-there-any-way-to-calculate-inertial-property-of-a-robot-to-simulate-it-in-gazebo/s
    One general rule of thumb I use for checking my inertia tensors is: If total mass of the rigid body is m, and the dimension of the corresponding body is d, then check to see if ixx, iyy, izz are near m*(d/2)^2.

    This is by no means correct, but a sanity check to make sure the moment of inertia are the right order of magnitudes, so the model behaves somewhat physically realistically.
    -->
  <!-- real inertia for the head are still required -->
  <link name="world"/>
  <!-- The base of the hand, fixed to its parent. -->
  <joint name="world_head_base_joint" type="fixed">
    <origin xyz="0.0 0.0 0.0"/>
    <parent link="world"/>
    <child link="head_base_link"/>
  </joint>
  <link name="head_base_link">
    <inertial>
      <origin xyz="0 0 0"/>
      <mass value="0.2"/>
      <inertia ixx="0.02" ixy="0.0" ixz="0.0" iyy="0.02" iyz="0.0" izz="0.02"/>
    </inertial>
    <!-- <visual>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <geometry>
          <cylinder radius="0.03" length="0.15"/>
        </geometry>
        <material name="KIT/DarkGrey"/>
      </visual>
      <collision>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <geometry>
          <cylinder radius="0.03" length="0.15"/>
        </geometry>
      </collision> -->
  </link>
  <!-- neck -->
  <joint name="head_neck_pitch_joint" type="revolute">
    <origin rpy="-1.57079632679 0 0" xyz="0 0 0"/>
    <axis xyz="0 0 1"/>
    <limit effort="204" lower="-0.575958653158" upper="0.575958653158" velocity="3.14159265359"/>
    <safety_controller k_position="30" k_velocity="30" soft_lower_limit="-0.575958653158" soft_upper_limit="0.575958653158"/>
    <dynamics damping="1.0" friction="1.0"/>
    <parent link="head_base_link"/>
    <child link="head_head_1_link"/>
  </joint>
  <link name="head_head_1_link">
    <inertial>
      <origin xyz="0 0 0"/>
      <mass value="0.2"/>
      <inertia ixx="0.02" ixy="0.0" ixz="0.0" iyy="0.02" iyz="0.0" izz="0.02"/>
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <cylinder length="0.15" radius="0.03"/>
      </geometry>
      <material name="KIT/DarkGrey"/>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <cylinder length="0.15" radius="0.03"/>
      </geometry>
    </collision>
  </link>
  <joint name="head_neck_roll_joint" type="revolute">
    <origin rpy="0 1.57079632679 0" xyz="0 0 0"/>
    <axis xyz="0 0 1"/>
    <limit effort="204" lower="-0.488692190558" upper="0.488692190558" velocity="3.14159265359"/>
    <safety_controller k_position="30" k_velocity="30" soft_lower_limit="-0.488692190558" soft_upper_limit="0.488692190558"/>
    <dynamics damping="1.0" friction="1.0"/>
    <parent link="head_head_1_link"/>
    <child link="head_head_2_link"/>
  </joint>
  <link name="head_head_2_link">
    <inertial>
      <origin xyz="0 0 0"/>
      <mass value="0.2"/>
      <inertia ixx="0.02" ixy="0.0" ixz="0.0" iyy="0.02" iyz="0.0" izz="0.02"/>
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <cylinder length="0.15" radius="0.03"/>
      </geometry>
      <material name="KIT/DarkGrey"/>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <cylinder length="0.15" radius="0.03"/>
      </geometry>
    </collision>
  </link>
  <joint name="head_neck_yaw_joint" type="revolute">
    <origin rpy="-1.57079632679 -1.57079632679 0" xyz="0 0 0"/>
    <axis xyz="0 0 1"/>
    <limit effort="204" lower="-1.98967534727" upper="1.98967534727" velocity="3.14159265359"/>
    <safety_controller k_position="30" k_velocity="30" soft_lower_limit="-1.98967534727" soft_upper_limit="1.98967534727"/>
    <dynamics damping="1.0" friction="1.0"/>
    <parent link="head_head_2_link"/>
    <child link="head_head_3_link"/>
  </joint>
  <link name="head_head_3_link">
    <inertial>
      <origin xyz="0 0 0"/>
      <mass value="0.2"/>
      <inertia ixx="0.02" ixy="0.0" ixz="0.0" iyy="0.02" iyz="0.0" izz="0.02"/>
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <cylinder length="0.15" radius="0.03"/>
      </geometry>
      <material name="KIT/DarkGrey"/>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <cylinder length="0.15" radius="0.03"/>
      </geometry>
    </collision>
  </link>
  <joint name="head_head_tilt_joint" type="revolute">
    <origin rpy="1.57079632679 0 0" xyz="0 0 -0.1745"/>
    <axis xyz="0 0 1"/>
    <limit effort="204" lower="-0.698131700798" upper="0.698131700798" velocity="3.14159265359"/>
    <safety_controller k_position="30" k_velocity="30" soft_lower_limit="-0.698131700798" soft_upper_limit="0.698131700798"/>
    <dynamics damping="1.0" friction="1.0"/>
    <parent link="head_head_3_link"/>
    <child link="head_head_4_link"/>
  </joint>
  <link name="head_head_4_link">
    <inertial>
      <origin xyz="0 0 0"/>
      <mass value="0.2"/>
      <inertia ixx="0.02" ixy="0.0" ixz="0.0" iyy="0.02" iyz="0.0" izz="0.02"/>
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <cylinder length="0.15" radius="0.03"/>
      </geometry>
      <material name="KIT/DarkGrey"/>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <cylinder length="0.15" radius="0.03"/>
      </geometry>
    </collision>
  </link>
  <joint name="head_eyes_tilt_joint" type="revolute">
    <origin rpy="0 0 0" xyz="0.1 0 0"/>
    <axis xyz="0 0 1"/>
    <limit effort="204" lower="-0.349065850399" upper="0.349065850399" velocity="3.14159265359"/>
    <safety_controller k_position="30" k_velocity="30" soft_lower_limit="-0.349065850399" soft_upper_limit="0.349065850399"/>
    <dynamics damping="1.0" friction="1.0"/>
    <parent link="head_head_4_link"/>
    <child link="head_head_5_link"/>
  </joint>
  <link name="head_head_5_link">
    <inertial>
      <origin xyz="0 0 0"/>
      <mass value="0.2"/>
      <inertia ixx="0.02" ixy="0.0" ixz="0.0" iyy="0.02" iyz="0.0" izz="0.02"/>
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <cylinder length="0.03" radius="0.03"/>
      </geometry>
      <material name="KIT/DarkGrey"/>
    </visual>
    <collision>
      <origin rpy="1.57079632679 0 0" xyz="-0.1 0.10 0"/>
      <geometry>
        <cylinder length="0.3" radius="0.12"/>
      </geometry>
    </collision>
  </link>
  <joint name="head_left_eye_joint" type="revolute">
    <origin rpy="1.57079632679 0 0" xyz="0 0 0.0465"/>
    <axis xyz="0 0 1"/>
    <limit effort="204" lower="-0.349065850399" upper="0.349065850399" velocity="3.14159265359"/>
    <safety_controller k_position="30" k_velocity="30" soft_lower_limit="-0.349065850399" soft_upper_limit="0.349065850399"/>
    <dynamics damping="1.0" friction="1.0"/>
    <parent link="head_head_5_link"/>
    <child link="head_left_eye_link"/>
  </joint>
  <link name="head_left_eye_link">
    <inertial>
      <origin xyz="0 0 0"/>
      <mass value="0.2"/>
      <inertia ixx="0.02" ixy="0.0" ixz="0.0" iyy="0.02" iyz="0.0" izz="0.02"/>
    </inertial>
    <visual>
      <origin rpy="0 1.57079632679 0" xyz="0.02 0 0"/>
      <geometry>
        <cylinder length="0.02" radius="0.03"/>
      </geometry>
      <material name="KIT/White"/>
    </visual>
    <collision>
      <origin rpy="0 1.57079632679 0" xyz="0.02 0 0"/>
      <geometry>
        <cylinder length="0.02" radius="0.03"/>
      </geometry>
    </collision>
  </link>
  <joint name="head_right_eye_joint" type="revolute">
    <origin rpy="1.57079632679 0 0" xyz="0 0 -0.0465"/>
    <axis xyz="0 0 1"/>
    <limit effort="204" lower="-0.349065850399" upper="0.349065850399" velocity="3.14159265359"/>
    <safety_controller k_position="30" k_velocity="30" soft_lower_limit="-0.349065850399" soft_upper_limit="0.349065850399"/>
    <dynamics damping="1.0" friction="1.0"/>
    <parent link="head_head_5_link"/>
    <child link="head_right_eye_link"/>
  </joint>
  <link name="head_right_eye_link">
    <inertial>
      <origin xyz="0 0 0"/>
      <mass value="0.2"/>
      <inertia ixx="0.02" ixy="0.0" ixz="0.0" iyy="0.02" iyz="0.0" izz="0.02"/>
    </inertial>
    <visual>
      <origin rpy="0 1.57079632679 0" xyz="0.02 0 0"/>
      <geometry>
        <cylinder length="0.02" radius="0.03"/>
      </geometry>
      <material name="KIT/White"/>
    </visual>
    <collision>
      <origin rpy="0 1.57079632679 0" xyz="0.02 0 0"/>
      <geometry>
        <cylinder length="0.02" radius="0.03"/>
      </geometry>
    </collision>
  </link>
  <!--     <joint name="${name}_face_joint" type="fixed">
      <origin xyz="0.05 -0.02 0" rpy="-1.57 2.356194 0.0" />
      <parent link="${name}_head_5_link"/>
      <child link="${name}_face_link"/>
    </joint>

    <link name="${name}_face_link">
      <visual>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <geometry>
          <mesh filename="package://kit_head_description/meshes/inmoov_face.stl"/>
        </geometry>
        <material name="KIT/Orange"/>
      </visual>
      <collision>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <geometry>
          <cylinder radius="0.03" length="0.15"/>
        </geometry>
      </collision>
    </link> -->
  <joint name="head_asus_joint" type="fixed">
    <origin rpy="1.5707 0.0 0.0" xyz="0 -0.1 0"/>
    <parent link="head_head_5_link"/>
    <child link="head_asus_link"/>
  </joint>
  <link name="head_asus_link">
    <inertial>
      <origin xyz="0 0 0"/>
      <mass value="0.2"/>
      <inertia ixx="0.02" ixy="0.0" ixz="0.0" iyy="0.02" iyz="0.0" izz="0.02"/>
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://kit_head_description/meshes/asus_xtion_body.stl"/>
      </geometry>
      <material name="KIT/Black"/>
    </visual>
    <collision>
      <origin rpy="1.57079632679 0 0" xyz="0 0 0"/>
      <geometry>
        <cylinder length="0.20" radius="0.03"/>
      </geometry>
    </collision>
  </link>
  <!-- ASUS Xtion -->
  <link name="head_camera_depth_frame"/>
  <link name="head_camera_rgb_frame"/>
  <link name="head_camera_depth_optical_frame"/>
  <link name="head_camera_rgb_optical_frame"/>
  <joint name="head_camera_depth_frame_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0 0.045 0.02"/>
    <parent link="head_asus_link"/>
    <child link="head_camera_depth_frame"/>
  </joint>
  <joint name="head_camera_rgb_frame_joint" type="fixed">
    <origin rpy="0.0 0.0 0.0" xyz="0 0.02 0.02"/>
    <parent link="head_asus_link"/>
    <child link="head_camera_rgb_frame"/>
  </joint>
  <joint name="head_camera_depth_optical_frame_joint" type="fixed">
    <origin rpy="-1.57079632679 0 -1.57079632679" xyz="0 0 0"/>
    <parent link="head_camera_depth_frame"/>
    <child link="head_camera_depth_optical_frame"/>
  </joint>
  <joint name="head_camera_rgb_optical_frame_joint" type="fixed">
    <origin rpy="-1.57079632679 0 -1.57079632679" xyz="0 0 0"/>
    <parent link="head_camera_rgb_frame"/>
    <child link="head_camera_rgb_optical_frame"/>
  </joint>
  <transmission name="head_neck_pitch_joint_trans">
    <robotNamespace>head</robotNamespace>
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="head_neck_pitch_joint">
      <hardwareInterface>EffortJointInterface</hardwareInterface>
    </joint>
    <actuator name="head_neck_pitch_joint_motor">
      <mechanicalReduction>1.0</mechanicalReduction>
    </actuator>
  </transmission>
  <transmission name="head_neck_roll_joint_trans">
    <robotNamespace>head</robotNamespace>
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="head_neck_roll_joint">
      <hardwareInterface>EffortJointInterface</hardwareInterface>
    </joint>
    <actuator name="head_neck_roll_joint_motor">
      <mechanicalReduction>1.0</mechanicalReduction>
    </actuator>
  </transmission>
  <transmission name="head_neck_yaw_joint_trans">
    <robotNamespace>head</robotNamespace>
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="head_neck_yaw_joint">
      <hardwareInterface>EffortJointInterface</hardwareInterface>
    </joint>
    <actuator name="head_neck_yaw_joint_motor">
      <mechanicalReduction>1.0</mechanicalReduction>
    </actuator>
  </transmission>
  <transmission name="head_head_tilt_joint_trans">
    <robotNamespace>head</robotNamespace>
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="head_head_tilt_joint">
      <hardwareInterface>EffortJointInterface</hardwareInterface>
    </joint>
    <actuator name="head_head_tilt_joint_motor">
      <mechanicalReduction>1.0</mechanicalReduction>
    </actuator>
  </transmission>
  <transmission name="head_eyes_tilt_joint_trans">
    <robotNamespace>head</robotNamespace>
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="head_eyes_tilt_joint">
      <hardwareInterface>EffortJointInterface</hardwareInterface>
    </joint>
    <actuator name="head_eyes_tilt_joint_motor">
      <mechanicalReduction>1.0</mechanicalReduction>
    </actuator>
  </transmission>
  <transmission name="head_left_eye_joint_trans">
    <robotNamespace>head</robotNamespace>
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="head_left_eye_joint">
      <hardwareInterface>EffortJointInterface</hardwareInterface>
    </joint>
    <actuator name="head_left_eye_joint_motor">
      <mechanicalReduction>1.0</mechanicalReduction>
    </actuator>
  </transmission>
  <transmission name="head_right_eye_joint_trans">
    <robotNamespace>head</robotNamespace>
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="head_right_eye_joint">
      <hardwareInterface>EffortJointInterface</hardwareInterface>
    </joint>
    <actuator name="head_right_eye_joint_motor">
      <mechanicalReduction>1.0</mechanicalReduction>
    </actuator>
  </transmission>
  <gazebo reference="head_base_link">
    <!-- selfCollide>true</selfCollide -->
    <gravity>true</gravity>
    <mu1>500.0</mu1>
    <mu2>500.0</mu2>
    <kp>10000000.0</kp>
    <kd>1.0</kd>
  </gazebo>
  <gazebo reference="head_head_1_link">
    <!-- selfCollide>true</selfCollide -->
    <gravity>true</gravity>
    <mu1>500.0</mu1>
    <mu2>500.0</mu2>
    <kp>10000000.0</kp>
    <kd>1.0</kd>
  </gazebo>
  <gazebo reference="head_head_2_link">
    <!-- selfCollide>true</selfCollide -->
    <gravity>true</gravity>
    <mu1>500.0</mu1>
    <mu2>500.0</mu2>
    <kp>10000000.0</kp>
    <kd>1.0</kd>
  </gazebo>
  <gazebo reference="head_head_3_link">
    <!-- selfCollide>true</selfCollide -->
    <gravity>true</gravity>
    <mu1>500.0</mu1>
    <mu2>500.0</mu2>
    <kp>10000000.0</kp>
    <kd>1.0</kd>
  </gazebo>
  <gazebo reference="head_head_4_link">
    <!-- selfCollide>true</selfCollide -->
    <gravity>true</gravity>
    <mu1>500.0</mu1>
    <mu2>500.0</mu2>
    <kp>10000000.0</kp>
    <kd>1.0</kd>
  </gazebo>
  <gazebo reference="head_head_5_link">
    <!-- selfCollide>true</selfCollide -->
    <gravity>true</gravity>
    <mu1>500.0</mu1>
    <mu2>500.0</mu2>
    <kp>10000000.0</kp>
    <kd>1.0</kd>
  </gazebo>
  <gazebo reference="head_left_eye_link">
    <!-- selfCollide>true</selfCollide -->
    <gravity>true</gravity>
    <mu1>500.0</mu1>
    <mu2>500.0</mu2>
    <kp>10000000.0</kp>
    <kd>1.0</kd>
    <sensor name="head_left_eye" type="camera">
      <update_rate>30.0</update_rate>
      <camera name="head_left_eye_cam">
        <horizontal_fov>1.3962634</horizontal_fov>
        <image>
          <width>800</width>
          <height>800</height>
          <format>R8G8B8</format>
        </image>
        <clip>
          <near>0.02</near>
          <far>300</far>
        </clip>
        <noise>
          <type>gaussian</type>
          <!-- Noise is sampled independently per pixel on each frame.
						That pixel's noise value is added to each of its color
						channels, which at that point lie in the range [0,1]. -->
          <mean>0.0</mean>
          <stddev>0.007</stddev>
        </noise>
      </camera>
      <plugin filename="libgazebo_ros_camera.so" name="head_left_eye_camera_controller">
        <alwaysOn>true</alwaysOn>
        <updateRate>30.0</updateRate>
        <cameraName>head_left_eye</cameraName>
        <imageTopicName>image_raw</imageTopicName>
        <cameraInfoTopicName>camera_info</cameraInfoTopicName>
        <frameName>head_left_eye_link</frameName>
        <hackBaseline>0.07</hackBaseline>
        <distortionK1>0.0</distortionK1>
        <distortionK2>0.0</distortionK2>
        <distortionK3>0.0</distortionK3>
        <distortionT1>0.0</distortionT1>
        <distortionT2>0.0</distortionT2>
      </plugin>
    </sensor>
  </gazebo>
  <gazebo reference="head_right_eye_link">
    <!-- selfCollide>true</selfCollide -->
    <gravity>true</gravity>
    <mu1>500.0</mu1>
    <mu2>500.0</mu2>
    <kp>10000000.0</kp>
    <kd>1.0</kd>
    <sensor name="head_right_eye" type="camera">
      <update_rate>30.0</update_rate>
      <camera name="head_right_eye_cam">
        <horizontal_fov>1.3962634</horizontal_fov>
        <image>
          <width>800</width>
          <height>800</height>
          <format>R8G8B8</format>
        </image>
        <clip>
          <near>0.02</near>
          <far>300</far>
        </clip>
        <noise>
          <type>gaussian</type>
          <!-- Noise is sampled independently per pixel on each frame.
						That pixel's noise value is added to each of its color
						channels, which at that point lie in the range [0,1]. -->
          <mean>0.0</mean>
          <stddev>0.007</stddev>
        </noise>
      </camera>
      <plugin filename="libgazebo_ros_camera.so" name="head_right_eye_camera_controller">
        <alwaysOn>true</alwaysOn>
        <updateRate>100.0</updateRate>
        <cameraName>head_right_eye</cameraName>
        <imageTopicName>image_raw</imageTopicName>
        <cameraInfoTopicName>camera_info</cameraInfoTopicName>
        <frameName>head_right_eye_link</frameName>
        <hackBaseline>0.07</hackBaseline>
        <distortionK1>0.0</distortionK1>
        <distortionK2>0.0</distortionK2>
        <distortionK3>0.0</distortionK3>
        <distortionT1>0.0</distortionT1>
        <distortionT2>0.0</distortionT2>
      </plugin>
    </sensor>
  </gazebo>
  <!-- plugin name="${name}_asus_controller" filename="libgazebo_ros_openni_kinect.so">
			<baseline>0.2</baseline>
			<alwaysOn>true</alwaysOn>
			<updateRate>1.0</updateRate>
			<cameraName>${name}_asus</cameraName>
			<imageTopicName>/${name}_asus/depth/image_raw</imageTopicName>
			<cameraInfoTopicName>/${name}_asus/depth/camera_info</cameraInfoTopicName>
			<depthImageTopicName>/${name}_asus/depth/image_raw</depthImageTopicName>
			<depthImageInfoTopicName>/${name}_asus/depth/camera_info</depthImageInfoTopicName>
			<pointCloudTopicName>/${name}_asus/depth/points</pointCloudTopicName>
			<frameName>${name}_asus</frameName>
			<pointCloudCutoff>0.5</pointCloudCutoff>
			<distortionK1>0.00000001</distortionK1>
			<distortionK2>0.00000001</distortionK2>
			<distortionK3>0.00000001</distortionK3>
			<distortionT1>0.00000001</distortionT1>
			<distortionT2>0.00000001</distortionT2>
			<CxPrime>0</CxPrime>
			<Cx>0</Cx>
			<Cy>0</Cy>
			<focalLength>0</focalLength>
			<hackBaseline>0</hackBaseline>
		</plugin -->
  <gazebo>
    <plugin filename="libgazebo_ros_control.so" name="gazebo_ros_control">
      <robotNamespace>head</robotNamespace>
    </plugin>
  </gazebo>
  <gazebo reference="head_asus_link">
    <sensor name="head_camera_gazebo_sensor" type="depth">
      <always_on>true</always_on>
      <update_rate>10.0</update_rate>
      <camera>
        <horizontal_fov>0.994837673637</horizontal_fov>
        <image>
          <format>B8G8R8</format>
          <width>640</width>
          <height>480</height>
        </image>
        <clip>
          <near>0.01</near>
          <far>5</far>
        </clip>
      </camera>
      <plugin filename="libgazebo_ros_openni_kinect.so" name="head_camera_link_controller">
        <alwaysOn>true</alwaysOn>
        <updateRate>0</updateRate>
        <cameraName>camera</cameraName>
        <imageTopicName>head/camera/rgb/image_raw</imageTopicName>
        <cameraInfoTopicName>head/camera/rgb/camera_info</cameraInfoTopicName>
        <depthImageTopicName>head/camera/depth/image_raw</depthImageTopicName>
        <depthImageCameraInfoTopicName>head/camera/depth/camera_info</depthImageCameraInfoTopicName>
        <pointCloudTopicName>head/camera/depth_registered/points</pointCloudTopicName>
        <frameName>head_camera_depth_optical_frame</frameName>
        <pointCloudCutoff>0.05</pointCloudCutoff>
        <distortionK1>0.0000000</distortionK1>
        <distortionK2>0.0000000</distortionK2>
        <distortionK3>0.0000000</distortionK3>
        <distortionT1>0.0000000</distortionT1>
        <distortionT2>0.0000000</distortionT2>
        <CxPrime>0</CxPrime>
        <Cx>0</Cx>
        <Cy>0</Cy>
        <focalLength>0</focalLength>
        <hackBaseline>0</hackBaseline>
      </plugin>
    </sensor>
  </gazebo>
</robot>

